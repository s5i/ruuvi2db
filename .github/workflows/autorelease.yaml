name: Autorelease

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'

      - name: Fetch dependencies
        run: go get -u github.com/s5i/ruuvi2db

      - name: Build ruuvi2db
        run: GOOS=linux GOARCH=arm go build -ldflags "-X 'github.com/s5i/goutil/version.External=${{ github.ref }}'"

      - name: Build reader
        run: GOOS=linux GOARCH=arm go build -C reader/bin -ldflags "-X 'github.com/s5i/goutil/version.External=${{ github.ref }}'"

      - name: Build storage
        run: GOOS=linux GOARCH=arm go build -C storage/bin -ldflags "-X 'github.com/s5i/goutil/version.External=${{ github.ref }}'"

      - name: Build ui
        run: GOOS=linux GOARCH=arm go build -C ui/bin -ldflags "-X 'github.com/s5i/goutil/version.External=${{ github.ref }}'"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload ruuvi2db
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ruuvi2db
          asset_name: ruuvi2db
          asset_content_type: application/octet-stream

      - name: Upload reader
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./reader/bin/bin
          asset_name: ruuvi2db-reader
          asset_content_type: application/octet-stream

      - name: Upload storage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./storage/bin/bin
          asset_name: ruuvi2db-storage
          asset_content_type: application/octet-stream

      - name: Upload ui
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ui/bin/bin
          asset_name: ruuvi2db-ui
          asset_content_type: application/octet-stream